<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".sql" #>
<#@ include file="MultipleOutputHelper.ttinclude" #>
<# string content =
@"CREATE PROCEDURE [cqgdb].[{0}SPODTable]
    @optiondata OptionDatasType READONLY
AS

CREATE TABLE tempOptionData
( 
    optionname varchar (45),
    idoption int,
    datetime date, 
    price float, 
    impliedvol float,
    timetoexpinyears float
)

INSERT INTO tempOptionData
(
    optionname,
    datetime, 
    price, 
    impliedvol,
    timetoexpinyears
)
SELECT
    optionname,
    datetime, 
    price, 
    impliedvol,
    timetoexpinyears
FROM @optiondata

UPDATE tempOptionData SET tempOptionData.idoption = {0}tbloptions.idoption FROM {0}tbloptions INNER JOIN tempOptionData ON
tempOptionData. optionname = {0}tbloptions.optionname

SET NOCOUNT ON;

MERGE INTO cqgdb.{0}tbloptiondata as tgt
USING tempOptionData AS src
    ON tgt.idoption = src.idoption
    AND tgt.datetime = src.datetime
    AND tgt.price = src.price

WHEN MATCHED THEN
UPDATE
    SET 
    price = src.price,
    impliedvol = src.impliedvol,
    timetoexpinyears = src.timetoexpinyears

WHEN NOT MATCHED THEN
    INSERT 
    (idoption,
     datetime, 
     price, 
     impliedvol,
     timetoexpinyears)
    VALUES 
    (src.idoption, 
    src.datetime, 
    src.price, 
    src.impliedvol, 
    src.timetoexpinyears);
DROP TABLE tempOptionData;
SET NOCOUNT OFF;"; #>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
<# manager.StartNewFile("test_SPODTable.sql"); #>
<# Write(string.Format(content, "test_")); #>
<# manager.EndBlock(); #>
<# manager.Process(true); #>
<# manager.StartNewFile("SPODTable.sql"); #>
<# Write(string.Format(content, string.Empty)); #>
<# manager.EndBlock(); #>
<# manager.Process(false); #>